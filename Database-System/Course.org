#+TITLE: Database System
#+AUTHOR: Wahab Ahmad
* [2024-09-05 Thu]
** Database
- A shared collection of logicallly related data.
- A self-describing data collection.
- Organized data with no/minimum redundancy.
*** CURD operation
*** Integrity Constrains
*** Example
**** Universty
| Rno | Sname  | Age |
|-----+--------+-----|
|   1 | Hassan |  18 |
|   2 | Ali    |  21 |
where Rno is a key attribute.
** DBMS
- Software to maintain and create provide controlled to use database.
- It handle authority and Validation.
*** Database Application
*** File Processing System
A collection of programs that perform services for the end-user such as the production of reports.
*** Example
Oracle, SQL, MsAccess, etc.
* [2024-09-06 Fri]
** Types
*** SQL / Structure / Tabular
With rows and columns
**** Schema
The order of arranging data.
**** Example
| Name | Pn | Mail |
|------+----+------|
|      |    |      |
|      |    |      |
*** Non-SQL / Unsructure
Without schema.
**** Example
MongoDB
** Keys
*** Primary Key
The attribute that is unique to every object.
**** Example
Roll no.
*** Forign Key
The key with a one to many relation which is not to be entered repeatedly.
**** Example
Department => Students
** The Software we will be using
*** MICLESOFT SQL
*** MANGO DB
* [2024-09-12 Thu]
** 3 tier model
- Interface
- Business Logic
- Database
** ER Modeling
*** Data modeling
Is just waterfall for data base.
*** Stuff we build
- Interface ( in a domain specific lang )
  - Good Interface
    1. Use need to see the controls
    2. Expressed in fimiliar way
- Business Rules ( stuff to constrain the aspects of business )
  - Good Business rule
    1. It should run from the bottom level and it's influence should come to the top level
    2. Automated through DBMS
    3. Declaratibe
    4. Precise
    5. Atomic
    6. Distinct
    7. Expressible
    8. Business orientied
*** Monolythic Applicaion
Where everything is at one place.
*** Er Model Construction
**** Entity instance
***** Type
**** Attribute
**** Relation
***** Type
* [2024-09-19 Thu]
** Entity Relationship diagram
*** Entity gessing
| Student  | Vechical    | Employ        |
|----------+-------------+---------------|
| St no    | RPM         | Post          |
| Name     | Chases No.  | Organisation  |
| Reg no   | Model       | Designation   |
| Subjects | Sitting cap | Qualification |
| Semester | Color       | Name          |
| CGPA     | Power       | Type          |
|          | Part Id     | Id            |
|          | Part type   |               |
*** Cardinality
- One to Many ( teacher to students  )
- Many to Many ( vendor to warehouse
                 course to teacher
                 hospital to patient   )
*** Relationship
- Unirary
- Tertary
*** Dependent and Independent Entity
*** Assignment
To find all the entities in a Uni and there attributes along with the key one and find the relations among them.
* MISSED
* [2024-09-27 Fri]
** Parser
A translator that is different from compilers.
*Make a paeser*
** SQL statements
| Statement | Description                                                                 |
|-----------+-----------------------------------------------------------------------------|
| CREAT     | Creates a new table, a view of a table, or other object in database         |
| ALTER     | Modifies an existing database object, such as a table.                      |
| DROP      | Deletes an entire table, a view of a table or other object in the database. |
| INSERT    |                                                                             |
| DELETE    |                                                                             |
| UPDATE    |                                                                             |
| GRANT     |                                                                             |
| REVOKE    |                                                                             |
| SELECT    | Get a certain record from the datebase.                                     |
** SQL Constrains
These are the rules that are applied on the rows and columns.
*** Common constrains
- NOT NULL Constraint: Ensures that a column cannot have NULL value.
- DEFAULT Constraint: Provides a default value for a column when none is specified.
- UNIQUE Constraint: Ensures that all values in a column are different.
- PRIMARY Key: Uniquely identified each rows/records in a database table.
- FOREIGN Key: Uniquely identified a rows/records in any another database table.
- CHECK Constraint: The CHECK constraint ensures that all values in a column satisfy certain conditions.
- INDEX: Use to create and retrieve data from the database very quickly.
** Default Constrain
The default value given to a attribute when no value is given.
** Drop Statement
To drop the constrain.
** Unique Constrain
This is automatically given to the primary key.
** Keys
*** Primary Key
*** Composite Key
*** Forign Key
** Notes
- CHECK MY SKL
